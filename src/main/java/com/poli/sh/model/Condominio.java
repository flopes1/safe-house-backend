package com.poli.sh.model;
// Generated 23/06/2018 17:57:38 by Hibernate Tools 5.2.10.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Condominio generated by hbm2java
 */
@Entity
@Table(name = "condominio", catalog = "safehouse")
public class Condominio implements Serializable
{

    private static final long serialVersionUID = 9179679746422357048L;

    private Integer id;
    private String nome;
    private Boolean ativo;
    private String logadouro;
    private int numero;
    private String bairro;
    private String cidade;
    private String estado;
    @JsonManagedReference(value = "con_agen")
    private List<AgendamentoVisita> agendamentoVisitas = new ArrayList<AgendamentoVisita>(0);
    @JsonManagedReference(value = "con_user")
    private List<Usuario> usuarios = new ArrayList<Usuario>(0);
    @JsonManagedReference(value = "con_ped")
    private List<PedidoAutenticacao> pedidoAutenticacaos = new ArrayList<PedidoAutenticacao>(0);

    public Condominio()
    {
    }

    public Condominio(String nome, String logadouro, int numero, String bairro, String cidade, String estado)
    {
        this.nome = nome;
        this.logadouro = logadouro;
        this.numero = numero;
        this.bairro = bairro;
        this.cidade = cidade;
        this.estado = estado;
    }

    public Condominio(String nome, Boolean ativo, String logadouro, int numero, String bairro, String cidade,
            String estado, List<AgendamentoVisita> agendamentoVisitas, List<Usuario> usuarios,
            List<PedidoAutenticacao> pedidoAutenticacaos)
    {
        this.nome = nome;
        this.ativo = ativo;
        this.logadouro = logadouro;
        this.numero = numero;
        this.bairro = bairro;
        this.cidade = cidade;
        this.estado = estado;
        this.agendamentoVisitas = agendamentoVisitas;
        this.usuarios = usuarios;
        this.pedidoAutenticacaos = pedidoAutenticacaos;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "id", unique = true, nullable = false)
    public Integer getId()
    {
        return this.id;
    }

    public void setId(Integer id)
    {
        this.id = id;
    }

    @Column(name = "nome", nullable = false)
    public String getNome()
    {
        return this.nome;
    }

    public void setNome(String nome)
    {
        this.nome = nome;
    }

    @Column(name = "ativo")
    public Boolean getAtivo()
    {
        return this.ativo;
    }

    public void setAtivo(Boolean ativo)
    {
        this.ativo = ativo;
    }

    @Column(name = "logadouro", nullable = false)
    public String getLogadouro()
    {
        return this.logadouro;
    }

    public void setLogadouro(String logadouro)
    {
        this.logadouro = logadouro;
    }

    @Column(name = "numero", nullable = false)
    public int getNumero()
    {
        return this.numero;
    }

    public void setNumero(int numero)
    {
        this.numero = numero;
    }

    @Column(name = "bairro", nullable = false)
    public String getBairro()
    {
        return this.bairro;
    }

    public void setBairro(String bairro)
    {
        this.bairro = bairro;
    }

    @Column(name = "cidade", nullable = false)
    public String getCidade()
    {
        return this.cidade;
    }

    public void setCidade(String cidade)
    {
        this.cidade = cidade;
    }

    @Column(name = "estado", nullable = false)
    public String getEstado()
    {
        return this.estado;
    }

    public void setEstado(String estado)
    {
        this.estado = estado;
    }

    @LazyCollection(LazyCollectionOption.FALSE)
    @OneToMany(mappedBy = "condominio", cascade = CascadeType.ALL, orphanRemoval = true)
    public List<AgendamentoVisita> getAgendamentoVisitas()
    {
        return this.agendamentoVisitas;
    }

    public void setAgendamentoVisitas(List<AgendamentoVisita> agendamentoVisitas)
    {
        this.agendamentoVisitas = agendamentoVisitas;
    }

    @LazyCollection(LazyCollectionOption.FALSE)
    @OneToMany(mappedBy = "condominio", cascade = CascadeType.ALL, orphanRemoval = true)
    public List<Usuario> getUsuarios()
    {
        return this.usuarios;
    }

    public void setUsuarios(List<Usuario> usuarios)
    {
        this.usuarios = usuarios;
    }

    @LazyCollection(LazyCollectionOption.FALSE)
    @OneToMany(mappedBy = "condominio", cascade = CascadeType.ALL, orphanRemoval = true)
    public List<PedidoAutenticacao> getPedidoAutenticacaos()
    {
        return this.pedidoAutenticacaos;
    }

    public void setPedidoAutenticacaos(List<PedidoAutenticacao> pedidoAutenticacaos)
    {
        this.pedidoAutenticacaos = pedidoAutenticacaos;
    }

}
